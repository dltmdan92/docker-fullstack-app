upstream frontend {
    # 3000 번 포트에서 frontend가 돌아가고 있다는 것을 명시해줌
    # frontend -> docker-compose.yml 에서 설정
    server frontend:3000;
}

upstream backend {
    # 5000 번 포트에서 backend가 돌아가고 있다는 것을 명시해줌
    # backend -> docker-compose.yml 에서 설정
    server backend:5000;
}

server {
    # nginx 서버 포트 80번으로 열어줍니다.
    listen 80;

    # location의 우선 순위가 있는데 / 그냥 이렇게만 되는 것은 우선 순위가 가장 낮습니다.
    # 그래서 여기서는 /api로 시작하는 것을 먼저 찾고
    # 그게 없다면 / 이렇게 시작되는 것이니 그 요청을 http://frontend로 보내면 된다.
    location / {
        proxy_pass http://frontend;
    }

    # /api로 들어오는 요청을 http://backend로 보내줍니다.
    location /api {
        proxy_pass http://backend;
    }

    # 개발 환경에서 WebSocket 에러 발생하므로 error 처리를 위한 부분임
    location /sockjs-node {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgradle";
    }
}